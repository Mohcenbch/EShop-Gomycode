{"ast":null,"code":"import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// get all orders of user\nexport const getAllOrdersOfUser = userId => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAllOrdersUserRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/order/get-all-orders/${userId}`);\n    dispatch({\n      type: \"getAllOrdersUserSuccess\",\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllOrdersUserFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// get all orders of seller\nexport const getAllOrdersOfShop = shopId => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAllOrdersShopRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/order/get-seller-all-orders/${shopId}`);\n    dispatch({\n      type: \"getAllOrdersShopSuccess\",\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllOrdersShopFailed\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","server","getAllOrdersOfUser","userId","dispatch","type","data","get","payload","orders","error","response","message","getAllOrdersOfShop","shopId"],"sources":["C:/Users/Bch/Downloads/Eshop-GOMYCODE/Eshop-GOMYCODE/client/src/redux/actions/order.js"],"sourcesContent":["import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// get all orders of user\nexport const getAllOrdersOfUser = (userId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"getAllOrdersUserRequest\",\n    });\n\n    const { data } = await axios.get(\n      `${server}/order/get-all-orders/${userId}`\n    );\n\n    dispatch({\n      type: \"getAllOrdersUserSuccess\",\n      payload: data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllOrdersUserFailed\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// get all orders of seller\nexport const getAllOrdersOfShop = (shopId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"getAllOrdersShopRequest\",\n    });\n\n    const { data } = await axios.get(\n      `${server}/order/get-seller-all-orders/${shopId}`\n    );\n\n    dispatch({\n      type: \"getAllOrdersShopSuccess\",\n      payload: data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllOrdersShopFailed\",\n      payload: error.response.data.message,\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,cAAc;;AAErC;AACA,OAAO,MAAMC,kBAAkB,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAChE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC7B,GAAEN,MAAO,yBAAwBE,MAAO,EAAC,CAC3C;IAEDC,QAAQ,CAAC;MACPC,IAAI,EAAE,yBAAyB;MAC/BG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAIC,MAAM,IAAK,MAAOV,QAAQ,IAAK;EAChE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC7B,GAAEN,MAAO,gCAA+Ba,MAAO,EAAC,CAClD;IAEDV,QAAQ,CAAC;MACPC,IAAI,EAAE,yBAAyB;MAC/BG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}